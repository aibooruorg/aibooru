daemon off;

error_log stderr info;
pid /tmp/nginx.pid;

worker_processes auto;
worker_rlimit_nofile 65536;
worker_shutdown_timeout 15s;

pcre_jit on;

events {
    multi_accept off;
    worker_connections 65536;
}

http {
    charset utf-8;

    types {
        text/css                      css;
        text/html                     html htm;
        text/plain                    txt;
        text/xml                      xml;

        image/gif                     gif;
        image/x-icon                  ico;
        image/jpeg                    jpeg jpg;
        image/png                     png;
        image/svg+xml                 svg;
        image/webp                    webp;
        image/avif                    avif;

        video/mp4                     mp4;
        video/webm                    webm;

        application/javascript        js;
        application/json              json;

        application/vnd.ms-fontobject eot;
        font/ttf                      ttf;
        font/woff                     woff;
        font/woff2                    woff2;

        application/wasm              wasm;
        application/zip               zip;
    }

    aio       threads;
    aio_write on;

    sendfile    on;
    tcp_nopush  on;
    tcp_nodelay on;

    access_log off;

    server_tokens             off;
    log_subrequest            on;
    port_in_redirect          off;
    reset_timedout_connection on;

    keepalive_timeout  5m;
    keepalive_requests 1000;

    client_header_buffer_size   1k;
    client_header_timeout       60s;
    large_client_header_buffers 4 8k;
    client_body_buffer_size     8k;
    client_body_timeout         60s;

    client_body_temp_path /tmp/nginx-client-body;
    proxy_temp_path       /tmp/nginx-proxy;
    fastcgi_temp_path     /tmp/nginx-fastcgi;
    uwsgi_temp_path       /tmp/nginx-uwsgi;
    scgi_temp_path        /tmp/nginx-scgi;

    open_file_cache          max=20000 inactive=5m;
    open_file_cache_min_uses 2;
    open_file_cache_valid    5m;
    open_file_cache_errors   off;

    types_hash_max_size        2048;
    map_hash_bucket_size       64;
    variables_hash_bucket_size 256;
    variables_hash_max_size    2048;

    gzip on;
    gzip_comp_level 5;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types application/xml+rss application/atom+xml application/javascript application/json application/rss+xml application/vnd.ms-fontobject application/x-font-ttf application/xhtml+xml application/xml font/opentype image/svg+xml image/x-icon text/css text/javascript text/plain;
    gzip_proxied any;
    gzip_vary on;

    set_real_ip_from 10.0.0.0/8;
    set_real_ip_from 172.16.0.0/12;
    set_real_ip_from 192.168.0.0/16;
    real_ip_header X-Real-IP;

    server {
        server_name _;
        listen 3000 default_server backlog=8192;
        listen [::]:3000 default_server backlog=8192;

        error_page 500 502 503 504 /50x.html;

        more_set_headers "Access-Control-Allow-Origin: *";
        more_set_headers "X-Content-Type-Options: nosniff";

        location = /nginx/status {
            stub_status on;
        }

        location ~ (.*)/__.+?__(.+)$ {
            rewrite (.*)/__.+?__(.+)$ $1/$2;
        }

        set_by_lua $reverse_proxy 'return os.getenv("DANBOORU_REVERSE_PROXY")';
        set_by_lua $danbooru_port 'return os.getenv("DANBOORU_PORT")';

        # Go to http://localhost:3000/nginx/headers to see the raw HTTP headers received by Nginx. Useful for debugging reverse proxy setups.
        location = /nginx/headers {
            echo_duplicate 1 $echo_client_request_headers;
            echo "\r";
        }

        root /danbooru/public;

        location /fonts  { more_set_headers -s 200 "Cache-Control: public, max-age=31536000"; }
        location /images { more_set_headers -s 200 "Cache-Control: public, max-age=31536000"; }
        location = /favicon.ico { more_set_headers -s 200 "Cache-Control: public, max-age=31536000"; }
        location = /favicon.svg { more_set_headers -s 200 "Cache-Control: public, max-age=31536000"; }
        location = /apple-touch-icon.png { more_set_headers -s 200 "Cache-Control: public, max-age=31536000"; }
        location = /apple-touch-icon-precomposed.png { more_set_headers -s 200 "Cache-Control: public, max-age=31536000"; }

        location /packs-dev {
            proxy_pass http://webpack:3035;
        }

        location = /ws {
            proxy_pass http://webpack:3035;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $http_host;
        }

        location /data {
            more_set_headers -s "200 206" "Cache-Control: public, max-age=31536000";
            alias /images/;

            if ($request_method = "OPTIONS") {
                more_set_headers "Access-Control-Allow-Methods: GET, POST, OPTIONS";
                more_set_headers "Access-Control-Allow-Headers: Range";
                more_set_headers "Access-Control-Max-Age: 3600";
                return 204;
            }

            if ($arg_download) {
                more_set_headers "Content-Disposition: attachment";
            }
        }

    location / {
      proxy_pass http://danbooru:3000;
      proxy_redirect off;
      proxy_buffering on;

      set_by_lua_block $forwarded_host {
        if ngx.var.reverse_proxy == "true" and ngx.var.http_x_forwarded_host then
          ngx.req.set_header("X-Forwarded-For",   ngx.var.proxy_add_x_forwarded_for)
          ngx.req.set_header("X-Forwarded-Host",  ngx.var.http_x_forwarded_host)
          ngx.req.set_header("X-Forwarded-Port",  ngx.var.http_x_forwarded_port)
          ngx.req.set_header("X-Forwarded-Proto", ngx.var.http_x_forwarded_proto)
          return ngx.var.http_x_forwarded_host
        else
          ngx.req.set_header("X-Forwarded-For",   ngx.var.remote_addr)
          ngx.req.set_header("X-Forwarded-Host",  ngx.var.http_host)
          ngx.req.set_header("X-Forwarded-Port",  ngx.var.danbooru_port)
          ngx.req.set_header("X-Forwarded-Proto", ngx.var.scheme)
          return ngx.var.http_host
        end
      }

      proxy_set_header Host $forwarded_host;

      client_max_body_size 100m;
    }
  }
}
