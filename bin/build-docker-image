#!/usr/bin/env bash

# Build a Docker image. Note that uncommited changes won't be included in the
# image; commit changes to Git first before building the image.
#
# This will build two images, one called `danbooru` and the other called
# `danbooru:development`. The development image contains additional tools
# needed to rebuild the JS and CSS files during development.
#
# Usage:
#
#    # Commit any changed files first or they won't be included in the build.
#    $ git commit --all
#
#    # Build images named `danbooru` and `danbooru:development`.
#    $ bin/build-docker-image danbooru
#
#    # Build ARM images named `danbooru:arm64` and `danbooru:development-arm64`.
#    # To build ARM images on x86, you must install QEMU first.
#    $ sudo apt-get install qemu-system-arm qemu-user-static binfmt-support
#    $ bin/build-docker-image danbooru linux/arm64
#
#    # Build multi-architecture images for ARM and x86 named `danbooru` and `danbooru:development`.
#    $ bin/build-docker-image danbooru linux/amd64,linux/arm64
#
#    # Test out the new image.
#    $ DANBOORU_IMAGE=danbooru:development bin/dev

set -euxo pipefail

ARCH="$(dpkg --print-architecture)"
CURRENT_PLATFORM="linux/$ARCH"

IMAGE="${1:-ghcr.io/aibooruorg/aibooru}"
PLATFORM="${2:-$CURRENT_PLATFORM}"

DOCKER_IMAGE_REVISION=$(git rev-parse HEAD)
DOCKER_IMAGE_BUILD_DATE="$(date --utc +"%Y-%m-%dT%H:%M:%S.%3NZ")"

if [[ $PLATFORM != $CURRENT_PLATFORM && $PLATFORM != *,* ]]; then
  # If we're building for a different platform, and it's not a multi-platform image, then name the image after the platform so it doesn't conflict with images for the native platform.
  TARGET_ARCH="${PLATFORM#*/}" # linux/arm64 -> arm64
  git archive HEAD | docker buildx build - --platform $PLATFORM --build-arg DOCKER_IMAGE_REVISION=$DOCKER_IMAGE_REVISION --build-arg DOCKER_IMAGE_BUILD_DATE=$DOCKER_IMAGE_BUILD_DATE --target development --tag $IMAGE:development-$TARGET_ARCH --file Dockerfile --load
  git archive HEAD | docker buildx build - --platform $PLATFORM --build-arg DOCKER_IMAGE_REVISION=$DOCKER_IMAGE_REVISION --build-arg DOCKER_IMAGE_BUILD_DATE=$DOCKER_IMAGE_BUILD_DATE --target production  --tag $IMAGE:$TARGET_ARCH --file Dockerfile --load
else
  git archive HEAD | docker buildx build - --platform $PLATFORM --build-arg DOCKER_IMAGE_REVISION=$DOCKER_IMAGE_REVISION --build-arg DOCKER_IMAGE_BUILD_DATE=$DOCKER_IMAGE_BUILD_DATE --target development --tag $IMAGE:development --file Dockerfile --load
  git archive HEAD | docker buildx build - --platform $PLATFORM --build-arg DOCKER_IMAGE_REVISION=$DOCKER_IMAGE_REVISION --build-arg DOCKER_IMAGE_BUILD_DATE=$DOCKER_IMAGE_BUILD_DATE --target production  --tag $IMAGE --file Dockerfile --load
fi
